#---------------------------------------------------------------
# file:     ~/.tmux/conf
# author:   jason ryan - http://jasonwryan.com/
# vim:fenc=utf-8:nu:ai:si:et:ts=4:sw=4:fdm=indent:fdn=1:ft=conf:
#---------------------------------------------------------------
# Based on Thayer Williams' (http://cinderwick.ca)

# set correct term
set -g default-terminal screen-256color
# set -g default-terminal rxvt-unicode
# set -g default-terminal rxvt-256color
# set -g default-terminal xterm-256color
# set -g default-terminal xterm-screen-256color
## determine if we should enable 256-colour support
# if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]" 'set -g default-terminal screen-256color' 'set -g default-terminal screen'

# fix clicpboard in mac, you should install reattach-to-user-namespace via
# 'brew install reattach-to-user-namespace'
if "[[ \"$(uname)\" == \"Darwin\" ]] && (hash reattach-to-user-namespace &>/dev/null)" 'set-option -g default-command "reattach-to-user-namespace -l zsh"'

# set prefix key to ctrl+t
#unbind C-a
#set -g prefix C-a
#bind a send-prefix

# bind <C-`> for prefix key
# in xterm, you can also press <C-space> to trigger it.
unbind C-b
set -g prefix C-space
bind C-space send-prefix

# reload config without killing server
bind R source-file ~/.tmux.conf \; display-message "  Config reloaded..".

# more intuitive keybindings for splitting
# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind J swap-pane -D
bind K swap-pane -U

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# copy tmux buffer to clipboard
# tmux < 1.8
#if "[ \"$(uname)\" == \"Darwin\" ]" 'bind-key C-y run "tmux show-buffer | pbcopy"'
if "[ \"$(uname)\" == \"Darwin\" ]" 'bind-key -t vi-copy Enter copy-pipe pbcopy'

# tmux < 1.8
#if "[ \"$(expr substr $(uname -s) 1 5)\" == \"Linux\" ]" 'bind-key C-y run "tmux show-buffer | xclip -i -selection clipboard"'
if "[ \"$(expr substr $(uname -s) 1 5)\" == \"Linux\" ]" 'bind-key -t vi-copy Enter copy-pipe "xclip -in -selection clipboard"'

# move x clipboard into tmux paste buffer
if "[ \"$(uname)\" == \"Darwin\" ]" 'bind-key C-p run "pbpaste | tmux loadb -; tmux paste-buffer"'
if "[ \"$(expr substr $(uname -s) 1 5)\" == \"Linux\" ]" 'bind-key C-p run "xclip -o -selection clipboard | tmux loadb -; tmux paste-buffer"'

# send the prefix to client inside window (ala nested sessions)
bind-key -n C-i send-prefix

# toggle last window like screen
bind-key C-b last-window

# display panes in number
bind-key m display-panes

# confirm before killing a window or the server
bind-key q confirm kill-window
bind-key Q confirm kill-server

# toggle statusbar
bind-key b set-option status

# ctrl+left/right cycles thru windows
#bind-key -n C-right next
#bind-key -n C-left prev
bind-key -n C-down next
bind-key -n C-up prev

# scrollback buffer n lines
set -g history-limit 50000

# listen for activity on all windows
set -g bell-action any

# on-screen time for display-panes in ms
set -g display-panes-time 2000

# start window indexing at one instead of zero
set -g base-index 1

# enable wm window titles
set -g set-titles on

# enable auto renaming
setw -g automatic-rename on

# border colours
set -g pane-border-fg magenta
set -g pane-active-border-fg green
set -g pane-active-border-bg default

# wm window title string (uses statusbar variables)
set -g set-titles-string "tmux:#I [ #W ]"

# environment
## update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM"

# statusbar --------------------------------------------------------------
set -g window-status-format "#{?window_zoomed_flag,#I-Z,#I}:#W"
set -g window-status-current-format "#{?window_zoomed_flag,#I-Z,#I}:#W"

set -g status-keys vi
bind-key -t vi-edit Up history-up
bind-key -t vi-edit Down history-down

set-option -g status-left "[#S:#I.#P]"
set-option -g status-right " %a %m-%d %H:%M"
set -g status-interval 1
set -g status-justify centre # center align window list

# default statusbar colors
#set -g status-fg white
#set -g status-bg colour238

# default window title colors
set-window-option -g window-status-fg black
set-window-option -g window-status-bg default
set-window-option -g window-status-attr bright

# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright


# enable xterm-keys
set-window-option -g xterm-keys

# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# set mouse scroll
# set -g mode-mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on

# set ESC key delay
set -s escape-time 0
# set timeout timeoutlen=1000 ttimeoutlen=100
# set scrollbar
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# unbind keys
unbind-key -n Tab

bind Space resize-pane -Z

# vim-tmux
# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
#bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-h if-shell "$is_vim" "send-keys Escape  [104;5u" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind C-l send-keys 'C-l'



#==============================================================================
#COLOUR (Solarized dark)

# default statusbar colors
set-option -g status-bg black #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg orange #brightred #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg black #base02
set-option -g pane-active-border-fg brightgreen #base01

# message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# bell
set-window-option -g window-status-bell-style fg=black,bg=red #base02, red
